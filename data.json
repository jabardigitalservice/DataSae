{"coverage": 100.0, "raw_data": {"meta": {"version": "7.3.2", "timestamp": "2023-10-31T06:52:01.234770", "branch_coverage": false, "show_contexts": false}, "files": {"datasae/__init__.py": {"executed_lines": [7], "summary": {"covered_lines": 1, "num_statements": 1, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/boolean.py": {"executed_lines": [7, 9, 11, 12, 15, 16, 26, 27, 30, 31, 33, 40, 42, 43, 58, 59, 60, 62, 63, 70, 72, 87, 88, 89, 91, 92, 93, 94, 96, 99, 100, 106, 107, 108, 113, 115, 116, 118, 119, 139, 140, 141, 143, 144, 151, 153, 170, 171, 172, 174, 175, 176, 177, 179, 182, 183, 189, 190, 191, 196, 198, 199], "summary": {"covered_lines": 60, "num_statements": 60, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/converter/__init__.py": {"executed_lines": [7, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 27, 28, 36, 50, 52, 53, 67, 69, 70, 71, 74, 75, 82, 83, 84, 85, 86, 87, 88, 91, 92, 99, 100, 101, 104, 105, 106, 112, 114, 115, 122, 128, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 173, 176, 177, 198, 207, 208, 210, 221, 223, 224, 225, 226, 227, 229, 233, 234, 236, 237, 239, 240, 241, 243, 244, 245, 247, 249], "summary": {"covered_lines": 82, "num_statements": 82, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/converter/gsheet.py": {"executed_lines": [7, 9, 10, 11, 13, 14, 15, 17, 20, 21, 22, 29, 31, 32, 39, 44, 60, 61, 62, 67], "summary": {"covered_lines": 19, "num_statements": 19, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/converter/s3.py": {"executed_lines": [7, 9, 10, 11, 13, 14, 16, 19, 20, 21, 30, 31, 32, 34, 35, 42, 44, 75, 76, 79, 81, 82, 84, 95, 96, 97], "summary": {"covered_lines": 25, "num_statements": 25, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/converter/sql.py": {"executed_lines": [7, 9, 10, 11, 13, 14, 16, 19, 20, 21, 33, 34, 35, 36, 37, 38, 40, 41, 48, 52, 67, 68, 69, 71], "summary": {"covered_lines": 23, "num_statements": 23, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/exception.py": {"executed_lines": [7, 10, 11, 13, 15, 16, 17, 20, 21, 23, 25, 26, 27, 30, 31, 33, 35, 36, 37, 38, 41, 42, 44, 46, 47, 48, 49, 52, 53, 55, 57, 58, 59, 60], "summary": {"covered_lines": 29, "num_statements": 29, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/float.py": {"executed_lines": [7, 9, 11, 12, 15, 16, 18, 21, 22, 24, 33, 35, 36, 52, 53, 54, 56, 57, 59, 60, 65, 67, 68, 84, 85, 86, 88, 89, 91, 92, 96, 98, 99, 118, 119, 120, 122, 123, 125, 126, 130, 132, 133, 149, 150, 151, 153, 154, 156, 157, 161, 163, 164, 183, 184, 185, 187, 188, 190, 191, 195, 197, 198, 217, 218, 219, 221, 222, 224, 225, 231, 233, 234, 253, 254, 255, 257, 258, 260, 261, 265, 267, 268, 287, 288, 289, 291, 292, 294, 295, 299, 301, 317, 318, 319, 321, 322, 323, 324, 326, 329, 330, 332, 333, 336, 337, 338, 343, 345, 346, 348, 364, 365, 366, 368, 369, 370, 371, 372, 375, 376, 378, 379, 382, 383, 384, 389, 390, 391, 393, 409, 410, 411, 413, 414, 415, 416, 417, 420, 421, 423, 424, 427, 428, 429, 434, 436, 437, 439, 455, 456, 457, 459, 460, 461, 462, 463, 466, 467, 469, 470, 473, 474, 475, 480, 482, 483, 485, 501, 502, 503, 505, 506, 507, 508, 510, 515, 516, 518, 519, 522, 523, 524, 529, 531, 532, 534, 553, 554, 555, 557, 558, 559, 560, 561, 564, 565, 567, 568, 571, 572, 573, 578, 580, 581, 583, 599, 600, 601, 603, 604, 605, 606, 608, 611, 612, 614, 615, 618, 619, 620, 625, 627, 628, 630, 646, 647, 648, 650, 651, 652, 653, 654, 657, 658, 660, 661, 664, 665, 666, 671, 673, 674], "summary": {"covered_lines": 241, "num_statements": 241, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/integer.py": {"executed_lines": [7, 9, 11, 12, 15, 16, 18, 21, 22, 24, 33, 35, 36, 52, 53, 54, 56, 57, 59, 60, 64, 66, 67, 83, 84, 85, 87, 88, 90, 91, 95, 97, 98, 117, 118, 119, 121, 122, 124, 125, 129, 131, 132, 148, 149, 150, 152, 153, 155, 156, 160, 162, 163, 182, 183, 184, 186, 187, 189, 190, 194, 196, 197, 216, 217, 218, 220, 221, 223, 224, 230, 232, 233, 252, 253, 254, 256, 257, 259, 260, 264, 266, 267, 286, 287, 288, 290, 291, 293, 294, 298, 300, 301, 320, 321, 322, 324, 325, 327, 328, 332, 334, 350, 351, 352, 354, 355, 356, 357, 359, 362, 363, 365, 366, 369, 370, 371, 376, 378, 379, 381, 397, 398, 399, 401, 402, 403, 404, 406, 409, 410, 412, 413, 416, 417, 418, 423, 425, 426, 428, 444, 445, 446, 448, 449, 450, 451, 453, 458, 459, 461, 462, 465, 466, 467, 472, 474, 475, 477, 493, 494, 495, 497, 498, 499, 500, 502, 505, 506, 508, 509, 512, 513, 514, 519, 521, 522, 524, 540, 541, 542, 544, 545, 546, 547, 549, 554, 555, 557, 558, 561, 562, 563, 568, 570, 571, 573, 592, 593, 594, 596, 597, 598, 599, 601, 604, 605, 607, 608, 611, 612, 613, 618, 620, 621, 623, 639, 640, 641, 643, 644, 645, 646, 648, 651, 652, 654, 655, 658, 659, 660, 665, 667, 668, 670, 686, 687, 688, 690, 691, 692, 693, 695, 698, 699, 701, 702, 705, 706, 707, 712, 714, 715, 717, 734, 735, 736, 738, 739, 740, 741, 743, 746, 747, 749, 750, 753, 754, 755, 760, 762, 763], "summary": {"covered_lines": 270, "num_statements": 270, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/string.py": {"executed_lines": [7, 9, 11, 13, 14, 17, 18, 20, 23, 24, 26, 35, 37, 38, 57, 58, 59, 60, 61, 63, 64, 69, 71, 72, 91, 92, 93, 94, 95, 97, 98, 103, 105, 106, 125, 126, 127, 128, 129, 130, 132, 133, 138, 140, 141, 160, 161, 162, 163, 164, 165, 166, 168, 169, 174, 176, 177, 194, 195, 196, 197, 198, 200, 201, 205, 207, 208, 225, 226, 227, 228, 229, 231, 232, 236, 238, 239, 256, 257, 258, 259, 260, 262, 263, 267, 269, 270, 287, 288, 289, 290, 291, 293, 294, 298, 300, 315, 316, 317, 319, 320, 321, 322, 323, 326, 327, 328, 329, 332, 333, 334, 339, 340, 341, 343, 358, 359, 360, 362, 363, 364, 365, 366, 369, 370, 371, 372, 375, 376, 377, 382, 383, 384, 386, 401, 402, 403, 405, 406, 407, 408, 409, 414, 415, 416, 417, 420, 421, 422, 427, 428, 429, 431, 446, 447, 448, 450, 451, 452, 453, 454, 459, 460, 461, 462, 465, 466, 467, 472, 473, 474, 476, 490, 491, 492, 494, 495, 496, 497, 498, 501, 502, 503, 504, 507, 508, 509, 514, 515, 516, 518, 532, 533, 534, 536, 537, 538, 539, 540, 543, 544, 545, 546, 549, 550, 551, 556, 557, 558, 560, 574, 575, 576, 578, 579, 580, 581, 582, 587, 588, 589, 590, 593, 594, 595, 600, 601, 602, 604, 618, 619, 620, 622, 623, 624, 625, 626, 631, 632, 633, 634, 637, 638, 639, 644, 645, 646], "summary": {"covered_lines": 245, "num_statements": 245, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/timestamp.py": {"executed_lines": [7, 9, 11, 13, 14, 17, 18, 20, 23, 24, 26, 35, 37, 38, 55, 56, 57, 59, 60, 62, 63, 67, 69, 70, 87, 88, 89, 91, 92, 94, 95, 99, 101, 102, 124, 125, 126, 128, 129, 131, 132, 136, 138, 139, 158, 159, 160, 162, 163, 165, 166, 170, 172, 173, 195, 196, 197, 199, 200, 202, 203, 207, 209, 210, 230, 231, 232, 234, 235, 237, 238, 244, 246, 247, 267, 268, 269, 271, 272, 274, 275, 279, 281, 282, 302, 303, 304, 306, 307, 309, 310, 314, 316, 332, 333, 334, 336, 337, 338, 339, 341, 344, 345, 347, 348, 351, 352, 353, 358, 360, 361, 363, 379, 380, 381, 383, 384, 385, 386, 388, 391, 392, 394, 395, 398, 399, 400, 405, 407, 408, 410, 426, 427, 428, 430, 431, 432, 433, 435, 440, 441, 443, 444, 447, 448, 449, 454, 456, 457, 459, 475, 476, 477, 479, 480, 481, 482, 484, 489, 490, 492, 493, 496, 497, 498, 503, 505, 506, 508, 524, 525, 526, 528, 529, 530, 531, 533, 538, 539, 541, 542, 545, 546, 547, 552, 554, 555, 557, 578, 579, 580, 582, 583, 584, 585, 587, 590, 591, 593, 594, 597, 598, 599, 604, 606, 607, 609, 625, 626, 627, 629, 630, 631, 632, 634, 637, 638, 640, 641, 644, 645, 646, 651, 653, 654, 656, 672, 673, 674, 676, 677, 678, 679, 681, 684, 685, 687, 688, 691, 692, 693, 698, 700, 701], "summary": {"covered_lines": 242, "num_statements": 242, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "datasae/utils.py": {"executed_lines": [7, 9, 12, 13, 15, 38, 39, 45, 48, 49, 51, 52, 55, 72], "summary": {"covered_lines": 12, "num_statements": 12, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/__init__.py": {"executed_lines": [7, 9], "summary": {"covered_lines": 2, "num_statements": 2, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_boolean.py": {"executed_lines": [7, 9, 10, 12, 14, 15, 16, 19, 20, 22, 24, 25, 27, 29, 33, 34, 41, 43, 45, 64, 66, 89, 91, 93, 97, 98, 105, 107, 109, 128, 129, 152], "summary": {"covered_lines": 31, "num_statements": 31, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_converter/__init__.py": {"executed_lines": [7, 9, 10, 11, 13, 14, 16, 18, 19, 20, 23, 24, 26, 28, 29, 32, 33, 35, 37, 39, 40, 41, 42, 44, 46, 48, 50, 51], "summary": {"covered_lines": 26, "num_statements": 26, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_converter/test_gsheet.py": {"executed_lines": [7, 9, 10, 11, 13, 14, 17, 18, 20, 22, 24, 25, 27, 30, 31, 33, 35, 36, 37, 39, 41, 42, 43, 44, 48, 52, 54, 56, 57, 61, 63, 64, 66, 67, 76], "summary": {"covered_lines": 33, "num_statements": 33, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_converter/test_s3.py": {"executed_lines": [7, 9, 10, 12, 13, 16, 17, 19, 21, 23, 25, 27, 29, 30, 32, 43, 44, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 63, 65, 67, 68, 70, 72, 78, 82, 86], "summary": {"covered_lines": 35, "num_statements": 35, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_converter/test_sql.py": {"executed_lines": [7, 9, 10, 11, 12, 14, 15, 17, 18, 21, 22, 23, 25, 28, 29, 31, 33, 34, 35, 37, 38, 66, 69, 70, 71, 72, 73, 74, 75, 78, 81, 83, 87], "summary": {"covered_lines": 31, "num_statements": 31, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_exception.py": {"executed_lines": [7, 9, 11, 18, 19, 21, 23, 24, 28], "summary": {"covered_lines": 8, "num_statements": 8, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_float.py": {"executed_lines": [7, 9, 11, 12, 14, 15, 17, 20, 21, 23, 25, 26, 27, 29, 31, 35, 36, 52, 54, 56, 58, 59, 66, 68, 70, 79, 80, 97, 99, 101, 103, 104, 111, 113, 115, 125, 126, 143, 145, 147, 149, 150, 157, 159, 161, 170, 171, 192, 194, 196, 198, 199, 206, 208, 210, 219, 220, 237, 239, 241, 246, 247, 264, 266, 268, 272, 273, 287, 289, 291, 295, 296, 310], "summary": {"covered_lines": 72, "num_statements": 72, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_integer.py": {"executed_lines": [7, 9, 11, 12, 14, 15, 17, 20, 21, 23, 25, 26, 28, 30, 32, 33, 40, 42, 44, 57, 58, 77, 79, 81, 83, 84, 91, 93, 95, 109, 110, 129, 131, 133, 135, 136, 143, 145, 147, 161, 162, 183, 185, 187, 189, 190, 197, 199, 201, 215, 216, 235, 237, 239, 241, 242, 249, 251, 253, 267, 268, 289, 291, 293, 295, 296, 303, 305, 307, 316, 317, 336, 338, 340, 342, 343, 350, 352, 354, 363, 364, 379, 381, 383, 385, 386, 393, 395, 397, 406, 407, 421, 423, 425, 427, 428, 435, 437, 439, 448, 449, 464], "summary": {"covered_lines": 101, "num_statements": 101, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_string.py": {"executed_lines": [7, 9, 11, 13, 14, 15, 18, 19, 21, 23, 24, 26, 28, 45, 46, 53, 55, 57, 61, 62, 86, 88, 90, 94, 95, 102, 104, 106, 110, 111, 132, 134, 136, 148, 151, 158, 160, 162, 166, 169, 190, 192, 194, 198, 201, 208, 210, 212, 214, 217, 238, 278, 280, 292, 293, 300, 302, 304, 308, 309, 328, 330, 332, 336, 337, 344, 346, 348, 350, 351, 370, 372, 374, 378, 381, 388, 390, 392, 396, 399, 420, 422, 424, 436, 439, 446, 448, 450, 454, 457, 478], "summary": {"covered_lines": 90, "num_statements": 90, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "tests/test_timestamp.py": {"executed_lines": [7, 9, 10, 12, 14, 15, 16, 19, 20, 22, 24, 25, 27, 29, 31, 33, 34, 41, 43, 45, 46, 48, 61, 62, 83, 85, 87, 89, 91, 92, 99, 101, 103, 104, 105, 107, 120, 123, 145, 147, 149, 151, 153, 156, 163, 165, 167, 168, 169, 171, 184, 187, 209, 211, 213, 215, 217, 220, 227, 229, 231, 232, 233, 235, 248, 251, 273, 275, 277, 279, 281, 284, 291, 293, 295, 296, 298, 311, 314, 336, 338, 340, 342, 344, 349, 356, 358, 360, 362, 363, 365, 378, 383, 409, 411, 413, 415, 417, 418, 425, 427, 429, 431, 433, 446, 447, 469, 471, 473, 475, 477, 480, 487, 489, 491, 493, 495, 508, 509, 531], "summary": {"covered_lines": 119, "num_statements": 119, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}}, "totals": {"covered_lines": 1797, "num_statements": 1797, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}}, "coverage_path": "."}